# #------------------------------------------------------------------------------
# # 반복문
# # 로직을 반복하여 수행한다.
# # For
# # 타 프로그래밍 언어의 foreach와 구동원리가 똑같음
# #------------------------------------------------------------------------------
# # 1씩 증가하는 수를 표현할 때
# print(1)
# print(2)
# print(3)
# print(4)
# # -----
# print(100)

# # print() 함수를 반복적으로 호출하는 로직을 반복문을 통하여 줄일 수 있다.
# # 파이썬 for문의 range() : 정수 숫자의 범위를 지정해주는 기능.
# # range(1, 101) : 1 ~ 100         1 이상 101 미만
# # range(101)    : 0 ~ 100         
# for num in range(1, 101):
#     print(num, ',', end='')
# print('\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
# for num in range(101):
#     print(num, ',' , end='')


# # 리스트 (컬렉션 : 특정 데이터들을 열거하여 관리하는 데이터 유형)
# lists = [1, 2, 7, 5, 6]
# for i in lists:
#     print(i, end="")

# print('\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')

# for i in [1, 2, 7, 5, 6]:
#     print(i, end="")


# #------------------------------------------------------------------------------
# # 실습
# # 1. 1 부터 100 사이의 수 중 짝수 만 표현하는 로직을 구현해 보세요
# #------------------------------------------------------------------------------
# for i in range(2, 101, 2):
#     if(i % 2 == 0):
#         print(i, ',', end='')

# #------------------------------------------------------------------------------
# # 실습
# # 2. 1부터 100 까지의 수 중 3 의 배수 인 숫자의 모든 합을 구하세요
# #------------------------------------------------------------------------------
# sum = 0
# for i in range(1, 101):
#     if(i % 3 == 0):
#         sum += i
# print(sum)



# #------------------------------------------------------------------------------
# # 반복문 강제 종료 Break
# # 다음 순번 처리 Continue
# # 특정 조건에 따라 반복문을 제어할 수 있다.
# #------------------------------------------------------------------------------
# sum = 0 # 정수 값을 누적 변수
# for num in range(0, 101):
#     if 30 < num < 40:
#         print(num, " 은 합산 되지 않고 다음 for의 값을 처리합니다.")
#         continue
#     if num % 3 == 0:
#         sum += num
#     elif num == 77:
#         break
# print(sum)



# #------------------------------------------------------------------------------
# # 이중루프 (for in for)
# # 메인 for 에서 받아온 값을 기준으로 반복적으로 수행하는 로직을 구현할 수 있다.
# #------------------------------------------------------------------------------
# # 구구단 만들기
# # > 단수 (dan) 변수를 2 ~ 9까지 반복하고
# #   행수 (hang) 변수를 1 ~ 9까지 반복해서
# #   각 단 수 별로 행을 반복하여 곱한 값을 표현
# for dan in range(2, 10):
#     print('\n', dan, "단 입니다.")
#     for hang in range(1, 10):
#         print(dan, ' * ', hang, '=', dan*hang)


# # triangle 표현하기
# # . 이중 루프를 이용한 * 삼각형 그리

# y : 피라미드의 행을 변화, 표현하는 변수
# for y in range(1, 10):
#     for x in range(y):
#         print('*', end='')
#     print()

# # 위 로직은 아래처럼 간단히 구현 할 수 있다. 
# for y in range(1, 10):
#     print('*' * y)

# #------------------------------------------------------------------------------
# # while
# # 특정 조건을 만족 시킬 때 로직을 수행한다.
# #------------------------------------------------------------------------------
# # 증가한 번호가 5이하일 경우만 로직을 실행
# student = 1
# while student <= 5:
#     print(student, '번 학생입니다.')
#     student += 1 # 반드시 루프를 종료 시킬 수 있는 조건의 변화가 필요하다.


# # while의 continue 와 break
# student = 0
# while student <= 20:
#     student += 1 # 반드시 루프를 종료 시킬 수 있는 조건의 변화가 필요하다.
#     ## Validation 우선 : 조건을 우선적으로 검증한 이후에 로직을 돌리는 과정.
#     if 10 < student < 15:
#        student = 15  
#        continue
#     elif student == 18:
#         break
#     # 로직
#     print(student, '번 학생입니다.') 


# #------------------------------------------------------------------------------
# # 무한 루프 
# # 특정한 조건 없이는 끝나지 않고 반복하는 루프
# #------------------------------------------------------------------------------
# # 프로그램이 구동되고 있는동안 현재 시간을 지속하여 1초 단위로 표현하는 예제
# from datetime import datetime
# import time 
# while True :
#     print(datetime.now())
#     time.sleep(1) # 1초 

# # 특정 조건을 만족할 경우 무한 루프를 빠져나오는 로직을 구현
# # 종료해야 하는 범위가 지정되어 있지 않은 프로세스의 종료를 구현하고자 할 때
# print("3 + 7 = ? ")
# while True:
#     result = input("정답은 ? ")
#     if (result == '10'): break

# print("Good")



# #------------------------------------------------------------------------------
# # 실습
# # 1. While 문을 사용하여 1 에서 200 까지 모든 3의 배수 를 모두 표현하고 누적 합계를 출력 하세요
# #------------------------------------------------------------------------------
# initValue = 1
# lastValue = 200
# sum = 0
# while(initValue == lastValue):
#     if(initValue % 3 == 0):
#         print(initValue, ", " ,end="")
#         sum += initValue
#     initValue += 1
# print("\n---------------------------------------")
# print(sum)


# #------------------------------------------------------------------------------
# # 실습
# # 2. 아래와 같은 별 표 삼각형을 그리는 로직을 구현 해 보세요
# #------------------------------------------------------------------------------
# for i in range(9):
#     for j in range(9 - i):
#         print(" ", end='')
#     for k in range(i):
#         print("*", end='')
#     print()


# for i in range(9):
#     # 현재 행 공백의 개수
#     print(" " * (9 - i) , end='')
#     # 현재 행 별의 개수
#     for k in range(i):
#         print("*" * i)



# #------------------------------------------------------------------------------
# # 실습
# # 3. 아래와 같은 별 표 삼각형을 그리는 로직을 구현 해 보세요
# #------------------------------------------------------------------------------
# for i in range(9):
#     for j in range(9 - i):
#         print(" ", end="")
#     for k in range(i * 2 - 1):
#         print("*", end="")
#     for l in range(9 - i):
#         print(" ", end="")
#     print()


# for i in range(9):
#     print(" " * (9 - i), end="")
#     print("*" * (i * 2 - 1), end="")



# #------------------------------------------------------------------------------
# # 실습
# # 4. 0 부터 9999 까지 의 수 중 6 이 들어가지 않은 수 의 개수를 구하세요
# #------------------------------------------------------------------------------
# cnt = 0
# for num in range(0, 10000):
#     f = str(num)
#     if '6' not in f :
#         cnt += 1

# print(cnt)
